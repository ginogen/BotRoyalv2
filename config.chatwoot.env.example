# =================================
# ðŸ¤– ROYAL BOT - CONFIGURACIÃ“N CHATWOOT
# Copia este archivo como ".env" y completa las variables
# =================================

# ========================================
# SERVIDOR PRINCIPAL
# ========================================
PORT=8000
HOST=0.0.0.0

# ========================================
# CHATWOOT INTEGRATION
# ========================================
# URL de tu instancia de Chatwoot (SIN barra final)
CHATWOOT_API_URL=https://tu-chatwoot.com

# Token de API de Chatwoot
# Ve a Chatwoot â†’ Profile Settings â†’ Access Token
CHATWOOT_API_TOKEN=tu_token_de_chatwoot_aqui

# ID de la cuenta de Chatwoot  
# URL: /app/accounts/{ACCOUNT_ID}/dashboard
CHATWOOT_ACCOUNT_ID=123

# Secret para webhooks (opcional pero recomendado)
CHATWOOT_WEBHOOK_SECRET=tu_secret_webhook_aqui

# ========================================
# EVOLUTION API (WHATSAPP)
# ========================================
# URL de tu instancia de Evolution API
EVOLUTION_API_URL=https://tu-evolution-api.com

# Token de la Evolution API
EVOLUTION_API_TOKEN=tu_token_evolution_aqui

# Nombre de la instancia de WhatsApp
INSTANCE_NAME=F1_Retencion

# ========================================
# CONFIGURACIÃ“N DE RENDIMIENTO
# ========================================
# NÃºmero de workers para procesamiento paralelo
WORKER_POOL_SIZE=3

# MÃ¡ximo usuarios procesando concurrentemente  
MAX_CONCURRENT_USERS=5

# Timeout para buffer de mensajes (ms)
MESSAGE_BUFFER_TIMEOUT=3000

# Cooldown entre mensajes del mismo usuario (ms)
MESSAGE_COOLDOWN=1000

# ========================================
# DYNAMIC WORKER POOL (OPTIMIZED)
# ========================================
# MÃ­nimo workers siempre activos
MIN_WORKERS=3

# MÃ¡ximo workers que puede crear
MAX_WORKERS=8

# Tiempo de respuesta objetivo (segundos)
TARGET_RESPONSE_TIME=5.0

# Tiempo de espera antes de escalar (segundos)
SCALE_COOLDOWN=20

# ========================================
# CONFIGURACIÃ“N DEL BOT
# ========================================
# ConfiguraciÃ³n de OpenAI (si usas GPT)
OPENAI_API_KEY=tu_openai_key_aqui

# ConfiguraciÃ³n adicional segÃºn tus needs
# LOG_LEVEL=INFO
# DEBUG=false

# ========================================
# BASE DE DATOS (OPCIONAL)
# ========================================
# PostgreSQL para persistencia (opcional)
# DATABASE_URL=postgresql://user:pass@host:port/db
# DATABASE_HOST=localhost
# DATABASE_PORT=5432
# DATABASE_NAME=royal_bot
# DATABASE_USER=royal_user
# DATABASE_PASSWORD=tu_password

# ========================================
# INSTRUCCIONES DE CONFIGURACIÃ“N
# ========================================

# 1. OBTENER DATOS DE CHATWOOT:
#    - Ve a tu Chatwoot
#    - Profile Settings â†’ Access Token (para CHATWOOT_API_TOKEN)
#    - URL del browser: /app/accounts/{ID}/dashboard (para CHATWOOT_ACCOUNT_ID)
#    - Settings â†’ Webhooks â†’ Create webhook (para CHATWOOT_WEBHOOK_SECRET)

# 2. CONFIGURAR WEBHOOKS:
#    - Chatwoot â†’ Settings â†’ Webhooks â†’ Add New
#    - URL: https://tu-dominio.com/webhook/chatwoot
#    - Events: message_created
#    - Secret: usar mismo valor que CHATWOOT_WEBHOOK_SECRET

# 3. CONFIGURAR EVOLUTION API:
#    - Obtener URL y token de tu instancia Evolution
#    - Crear instancia de WhatsApp
#    - Configurar webhook: https://tu-dominio.com/webhook/evolution

# 4. PROBAR CONFIGURACIÃ“N:
#    - Ejecutar: python royal_chatwoot_server.py
#    - Verificar: http://localhost:8000/health
#    - Test directo: POST http://localhost:8000/test/message

# 5. DESPLEGAR:
#    - Railway: railway up
#    - Heroku: git push heroku main  
#    - VPS: usar screen/tmux con uvicorn 